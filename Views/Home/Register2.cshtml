@model NetEasyPay.Models.RegistrationModel

@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>

@if (ViewBag.IsSuccessful != null && ViewBag.IsSuccessful == true)
{
    <hr />
    <div class="col-md-12 bg-success" style="border-radius: 5px; padding: 1px 15px 15px 15px;">
        <h3>Thank you!</h3><br />
        Your registration request has been submitted.  You will receice an email once your registration has been approved.
    </div>
}
else if (ViewBag.IsSuccessful != null && ViewBag.IsSuccessful == false)
{
    <hr />
    <div class="col-md-12 bg-warning" style="border-radius: 5px; padding: 1px 15px 15px 15px;">
        <h3>Error</h3><br />
        @ViewBag.Message
    </div>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        @Html.HiddenFor(model => model.HasSSO)

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.HasSSO == false)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 required" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneExtension, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneExtension, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneExtension, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimeZone, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    <select class="form-control" id="TimeZone" name="TimeZone" required>
                        <option value="">---Please Choose---</option>
                        <option value="AST">AST</option>
                        <option value="EST">EST</option>
                        <option value="CST">CST</option>
                        <option value="MST">MST</option>
                        <option value="PST">PST</option>
                        <option value="AKST">AKST</option>
                        <option value="HST">HST</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MfaEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MfaEnabled)
                        @Html.ValidationMessageFor(model => model.MfaEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Please Wait</h4>
                </div>
                <div class="modal-body center-block">
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
}






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @if (Model.HasSSO)
    {
        <script type="text/javascript">
            $(function () {
                showPleaseWait(true);
                getEasyPayUser();
            });

            function getEasyPayUser() {
                var email = $("#EmailAddress").val();
                var apiUrl = "/api/v1/Authorization/ValidateEmail?SSO=true&email=" + email.toLowerCase();

                $.ajax({
                    url: apiUrl,
                    type: "POST",
                    success: function (data) {
                        if (data) {
                            console.log("Server response: ", data);
                            var serverResponse = JSON.parse(data.results);

                            // Is Internal Email?
                            if (typeof serverResponse.isInternal !== "undefined") {
                                if (serverResponse.isInternal) {
                                    window.location = "/home/register";
                                }
                            }
                            // Is User blocked?
                            else if (typeof serverResponse.Auth0Blocked !== "undefined") {
                                window.location = "/home/register";
                            }
                            else if (typeof serverResponse.auth0Id !== "undefined") {
                                $("#FirstName").val(serverResponse.firstName);
                                $("#LastName").val(serverResponse.lastName);
                                $("#CompanyID").val(serverResponse.companyName);

                                var sanitizedPhone = serverResponse.phoneNumber;
                                $("#PhoneNumber").val(sanitizedPhone.substring(1, sanitizedPhone.length));
                            }
                            else {
                                // They exist in both Auth0 and EasyPay...but they're not logged in.
                                window.location.href = "/home/index?emailAddress=" + email;
                            }
                        }
                        else {
                            // Show everything...records will need to be added to both systems.
                            console.log("No existing user record found in either Auth0 or EasyPay");
                        }
                    },
                    error: function (textStatus, errorThrown) {
                        console.log("Something happened: ", errorThrown);
                        return null;
                    },
                    complete: function () { showPleaseWait(false); }
                });
            }

            function showPleaseWait(tgl) {
                if (tgl == true)
                    $("#myModal").modal();
                else
                    $("#myModal").modal("hide");
            }
        </script>
    }
}
