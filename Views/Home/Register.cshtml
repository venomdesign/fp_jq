<div class="container">
    <div id="workingSpinner" class="row" style="display: none;">
        <i class="fa fa-spin fa-spinner fa-2x fa-fw" aria-hidden="true"></i>
    </div>
    <!-- Error Messages -->
    <div id="auth-error" class="alert alert-danger" style="display: none;">
        <strong>Error!</strong> Username or Password incorrect.
    </div>
    <div id="auth0-blocked" class="alert alert-danger" style="display: none;">
        <span>
            <i class="fa fa-exclamation-circle" aria-hidden="true"></i>
            Account is blocked. Please contact <a href="mailto:agenttrax@fnf.com?Subject=Account%20Blocked">agenttrax@fnf.com</a> or call (800) 586-0031.
        </span>
    </div>
    <div id="fnf-error" class="alert alert-danger" style="display: none;">
        <i class="fa fa-exclamation-circle" aria-hidden="true"></i>
        Sorry we seem to having a problem on our side right now. Please contact the helpdesk if this issue persists.
    </div>
    <!-- End Error Messages -->
    <div class="row">
        <div class="col-sm-4 ml-auto mr-auto" id="registrationPreFlight">
            <form id="pageForm" class="form-signin">
                <h2 class="title">Registration</h2>
                <div id="errorSummary" class="alert alert-danger" style="display: none;">
                    <div id="errorMessage"></div>
                </div>
                <div class="form-group">
                    <label for="preflightUsername">Enter your email address <span class="icon-danger">*</span></label>
                    <input type="email" id="preflightUsername" maxlength="30" required class="form-control col-lg-12">
                </div>
                <!-- Show this group IF the user has an SSO account before showing them the page.  Make them prove that it's there SSO account. -->
                <div class="form-group" id="PreFlightpassword" hidden="hidden">
                    <label for="passwordField">Password  <span class="icon-danger">*</span></label>
                    <input type="password" id="passwordField" class="form-control col-lg-12">
                </div>
                <input type="button" id="registrationPreFlightSubmit" class="btn btn-round" value="Submit">
            </form>
        </div>
    </div>
    <div id="registrationFormControl" class="row" style="display: none;">
        <div class="col-md-8 ml-auto mr-auto">
            <form id="registrationForm" method="post" class="form-horizontal" action="" novalidate>
                <h2 class="title">Registration</h2>
                <div class="row">
                    <div class="form-group col-sm-12">
                        <label class="control-label" for="userName">Email Address <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <input id="userName" type="email" class="form-control" maxlength="50" required pattern="[a-z0-9._%+-]+\u0040[a-z0-9.-]+\.[a-z]{2,3}$" data-email-msg="Email format is not valid" name="userName" />
                            <input id="hid_username" type="hidden" value="" />
                        </div>
                    </div>
                </div>
                <div id="passwordRow" class="row" style="display: none;">
                    <div class="form-group col-sm-6">
                        <label class=" control-label" for="password">Password <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <input type="password" class="form-control" id="password" maxlength="50" name="password">
                        </div>
                    </div>
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="confirmPassword">Confirm password <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <input type="password" class="form-control" id="confirmPassword" maxlength="50" name="confirmPassword">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="firstName">First name <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <input type="text" class="form-control" id="firstName" maxlength="50" name="firstName">
                        </div>
                        <input type="hidden" id="hid_firstName" />
                    </div>
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="lastName">Last name <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <input type="text" class="form-control" id="lastName" maxlength="50" name="lastName">
                        </div>
                        <input type="hidden" id="hid_lastName" />
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-12">
                        <label class="control-label" for="companyId">Company Name <span class="icon-danger">*</span></label>
                        <div class="errorCheck"><input type="text" class="form-control" id="companyId" name="companyId" maxlength="50"></div>
                        <input type="hidden" id="hid_companyId" />
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="phoneNumber">Phone Number <span class="icon-danger">*</span></label>
                        <div class="errorCheck"><input type="text" class="form-control" id="phoneNumber" name="phoneNumber" maxlength="16"></div>
                        <input type="hidden" id="hid_phoneNumber" />
                    </div>
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="phoneExtension">Ext </label>
                        <div class="errorCheck"><input type="text" class="form-control" id="phoneExtension" name="phoneExtension" maxlength="10"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label class="control-label" for="mobileNumber">Mobile Number <span class="icon-danger">*</span></label>
                        <div class="errorCheck"><input type="text" class="form-control" id="mobileNumber" name="mobileNumber" maxlength="16"></div>
                    </div>
                    <div class="form-group col-sm-6"></div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label for="timezone" class="control-label">Time Zone <span class="icon-danger">*</span></label>
                        <div class="errorCheck">
                            <select class="form-control" id="timezone" name="timezone" required>
                                <option value="">---Please Choose---</option>
                                <option value="AST">AST</option>
                                <option value="EST">EST</option>
                                <option value="CST">CST</option>
                                <option value="MST">MST</option>
                                <option value="PST">PST</option>
                                <option value="AKST">AKST</option>
                                <option value="HST">HST</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-sm-6"></div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-12">
                        <label for="commentsAgents" class="control-label">Comments/Additional Info</label>
                        <textarea class="form-control" id="commentsAgents" name="commentsAgents" rows="3" maxlength="4000" placeholder="Please add your associations you would like the approver to verify"></textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-12">
                        <label class="control-label">Enable Multi-Factor Authentication</label>
                        <div class="form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mFaEnabledYes" name="mFaEnabled[]" type="radio" value="true"> Yes
                                <span class="form-check-sign"></span>
                            </label>
                        </div>
                        <div class="form-check-radio">
                            <label class="form-check-label">
                                <input class="form-check-input" id="mFaEnabledNo" name="mFaEnabled[]" type="radio" value="false" checked> No
                                <span class="form-check-sign"></span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group pull-right">
                        <input type="button" class="btn btn-primary" id="registerUser" value="Register">
                        <input type="reset" class="btn btn-info" id="resetform">
                        <a href="/" class="btn btn-default">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/auth0.min.js"></script>
}
@section pageScripts{
    <script type="text/javascript">
        var validator = $("#registrationForm"),
            status = $(".status");

        $.validator.addMethod("accept", function (value, element, param) {
            return value.match(new RegExp("^" + param + "$"));
        }, 'please enter a valid set of characters');

        $(document).ready(function () {
            // Check for parameters
            var queryParameters = url2json(window.location.href);
            if (queryParameters) {
                if (queryParameters.q1 === 'true') {
                    $("#workingSpinner").show();
                    //$("#registrationPreFlight").hide();
                    validateEasyPayUser('chicken', queryParameters.q2);
                }
            }

            /*$('#mFaEnabled').change(function(){
                    if ($('#mFaEnabled[value="true"]:checked')) {
                        alert("Yes");
                        $('#mobileNumber').attr('required');
                        mobileNumber: "required"
                    } else {
                        $('#mobileNumber').removeAttr('required');
                        mobileNumber: ""
                    }
            });*/

            $("#registrationPreFlightSubmit").on("click",
                function () {
                    registrationPreFlightSubmit();
                }
            );

            $("#registerUser").on("click",
                function () {
                    if (validator.valid()) {
                        registerUser();
                    }
                }
            );

            // set up the masking for the phone and mobile
            $("#phoneNumber").mask("(999) 999-9999");
            $("#mobileNumber").mask("(999) 999-9999");
            //$("#phoneExtension").mask("9999999999");

            $('#commentsAgents').bind('copy', function (e) { e.preventDefault(); return false; });
            $('#commentsAgents').bind('paste', function (e) { e.preventDefault(); return false; });
            /*$("#resetForm").click(function(){
                $("input").each(function(){
                    if($(this).is('[readonly]') == false && $(this).prop('disabled',false)){
                        $(this).val(null);
                    }
                });
            });*/
        }); //END DOC READY

        /***** PREFLIGHT SUBMIT *****/
        function registrationPreFlightSubmit() {
            console.log("Registration preflight fired.");

            if ($("#passwordField").is(":visible")) {
                console.log("Authenticate an SSO user");
                // Authenticate the user at Auth0
                authenticateSsoUser();
            } else {
                // Validate the email address being entered.
                validateEasyPayUser(true, $("#preflightUsername").val());
            }
        };
        /***** END PREFLIGHT SUBMIT *****/

        function authenticateSsoUser() {
            var hostUrl = window.location.protocol + "//" + window.location.hostname;
            if (window.location.port !== null & window.location.port.length > 0) {
                hostUrl += ":" + window.location.port;
            }

            var webAuth = new auth0.WebAuth({
                domain: "fnf-int.auth0.com",
                redirectUri: hostUrl + "/Home/SsoCallback",
                clientID: "wVNMiQfTJUkKlQCYcOqLvu604peJKGT4",
                audience: "https://agency-api-int.fnf.com/"
            });

            var sso = new auth0.Authentication({
                domain: "fnf-int.auth0.com",
                redirectUri: hostUrl + "/Home/SsoCallback",
                clientID: "wVNMiQfTJUkKlQCYcOqLvu604peJKGT4",
                audience: "https://agency-api-int.fnf.com/"
            });

            if (validator.valid()) {
                //e.preventDefault();
                HideAccountBlockedMessage();
                AuthErrorHide();
                HideFnfError();

                $.ajax({
                    type: "GET",
                    url: "https://agency-webapi-int.fnf.com/o/api/connection?username=" + encodeURI($("#preflightUsername").val().trim()).toLowerCase() + "&_" + new Date().getTime(),
                    dataType: "json",
                    success: function (data) {
                        userConnection = data.connection;
                        var status = data.status;

                        webAuth.redirect.loginWithCredentials({
                            connection: userConnection,
                            username: $('#preflightUsername').val().trim(),
                            password: $('#passwordField').val().trim(),
                            scope: "openid profile email",
                            responseType: "token",
                            type: 'login'
                        },
                            function (err, authResult) {
                                if (err.statusCode != null) {
                                    if (err.statusCode == 429) {
                                        ShowAccountBlockedMessage();
                                    }
                                    else {
                                        AuthErrorShow();
                                    }
                                }
                            })
                    },
                    error: function (textStatus, errorThrown) {
                        ShowFnfError();
                    }
                });
            }
        };

        /***** VALIDATE EASYPAY USER *****/
        function validateEasyPayUser(sso, email) {
            $("#workingSpinner").show();
            var apiUrl = "/api/v1/Authorization/ValidateEmail?SSO=true&email=" + email.toLowerCase();

            $.ajax({
                url: apiUrl,
                type: "POST",
                success: function (data) {
                    if (data) {
                        console.log("Server response: ", data);
                        var serverResponse = JSON.parse(data.results);

                        if (typeof serverResponse.isInternal !== "undefined") {
                            if (serverResponse.isInternal) {
                                // This is an internal user.  NO LOVE!
                                $("#errorMessage").html("Please contact the helpdesk at XXX-XXX-XXXX for assistance with access using an Internal email address.");
                                $("#errorSummary").show();
                            }
                        } else if (typeof serverResponse.Auth0Blocked !== "undefined") {
                            // User's account is blocked AT Auth0.  NO LOVE!
                            var errorMsg = "no particular reason";
                            if (serverResponse.Reason !== '') {
                                errorMsg = serverResponse.Reason;
                            }
                            $("#errorMessage").html("This account has been blocked due to " + errorMsg + ". Please contact the helpdesk at XXX-XXX-XXXX for assistance.");
                            $("#errorSummary").show();
                        } else if (typeof serverResponse.auth0Id !== "undefined") {
                            //User HAS an SSO account, make them prove that it's theirs
                            //Show the password block and wait for them to enter a password and click next..

                            if ($("#PreFlightpassword").is(":visible") || sso === 'chicken') {
                                //Replace this with an actual SSO Login!
                                if (sso === 'chicken') {
                                    //you're good to go
                                    $("#workingSpinner").hide();
                                    $("#registrationPreFlight").hide();
                                    $("#registrationFormControl").show();
                                    $("#userName").val(serverResponse.emailAddress).attr("disabled", "disabled");
                                    $("#hid_userName").val(serverResponse.emailAddress);
                                    $("#firstName").val(serverResponse.firstName).attr("disabled", "disabled");
                                    $("#hid_firstName").val(serverResponse.firstName);
                                    $("#lastName").val(serverResponse.lastName).attr("disabled", "disabled");
                                    $("#hid_lastName").val(serverResponse.lastName);
                                    $("#companyId").val(serverResponse.companyName).attr("disabled", "disabled");
                                    $("#hid_companyId").val(serverResponse.companyName);
                                    var sanitizedPhone = serverResponse.phoneNumber.replace(/\D/g, '');
                                    $("#phoneNumber").val(sanitizedPhone.substring(1, sanitizedPhone.length)).mask("(999) 999-9999").attr("disabled", "disabled");
                                    $("#hid_phoneNumber").val(sanitizedPhone.substring(1, sanitizedPhone.length));
                                }
                                else {
                                    //Not the right password, exit
                                    alert("Authentication failed.  Try again");
                                    $("#passwordField").val('');
                                    return;
                                }
                            } else {
                                $("#PreFlightpassword").removeAttr('hidden');
                                $("#passwordField").prop('required', true);
                            }
                        } else {
                            // They exist in both Auth0 and EasyPay...but they're not logged in.
                            window.location.href = "/home/index?emailAddress=" + email;
                        }
                    } else {
                        // Show everything...records will need to be added to both systems.
                        console.log("No existing user record found in either Auth0 or EasyPay");
                        $("#registrationPreFlight").hide();
                        $("#passwordRow").show();
                        $("#registrationFormControl").show();
                        $("#userName").val($("#preflightUsername").val());
                        $("#userName").attr("disabled", "disabled");
                        $("#hid_userName").val($("#preflightUsername").val());
                        localStorage.setItem("CreateAuth0Record", "true");
                    }
                },
                error: function (textStatus, errorThrown) {
                    console.log("Something happened: ", errorThrown);
                    return null;
                },
                complete: function () {
                    $("#workingSpinner").hide();
                }
            });
        }
        /***** END VALIDATE EASYPAY USER *****/

        /***** REGISTER USER *****/
        function registerUser() {
            console.log("registerUser fired");
            validator.validate();

            var user = {
                "UserSysId": "0",
                "EmailAddress": $("#userName").val(),
                "Password": $("#password").val(),
                "FirstName": $("#firstName").val(),
                "LastName": $("#lastName").val(),
                "CompanyId": $("#companyId").val(),
                "PhoneNumber": $("#phoneNumber").val().replace(/\D/g, ''),
                "PhoneExtension": $("#phoneExtension").val().replace(/\D/g, ''),
                "MobileNumber": $("#mobileNumber").val().replace(/\D/g, ''),
                "Timezone": $("#timezone").val(),
                "IsLocked": "0",
                "IsActive": "0",
                "Notes": $("#commentsAgents").val(),
                "UserGuid": "",
                "MfaEnabled[]": $("#mFaEnabled:checked").val(),
                "MfaPhoneNumber": $("#mobileNumber").val()
            };

            console.log("User to register: ", user);

            var endpointUrl = "";
            if (localStorage.getItem("CreateAuth0Record")) {
                console.log("I have no Auth0 record.");
                localStorage.removeItem("CreateAuth0Record")
                endpointUrl = "/api/v1/Administration/AddUser?addAuth0=true";
            } else {
                console.log("I have an Auth0 record.")
                endpointUrl = "/api/v1/Administration/AddUser?addAuth0=false";
            }

            $.ajax({
                type: "POST",
                accepts: "application/json",
                contentType: 'application/json',
                url: endpointUrl,
                data: JSON.stringify(user),
                success: function (user) {
                    var serverResponse = JSON.parse(user.results);
                    window.location.href = "/home/thankyou?emailAddress=" + serverResponse.USER_NAME;
                },
                error: function (errorMsg) {
                    console.log("Something broke: ", errorMsg);
                },
                complete: function () {
                }
            });
        };
        /***** END REGISTER USER *****/

        /*** FORM VALIDATION RULES ***/
        validator.validate({
            rules: {
                userName: {
                    required: true,
                    email: true,
                    accept: '[-0-9a-zA-Z.+_]+@@[-0-9a-zA-Z.+_]+\.[a-zA-Z]{2,4}'
                },
                firstName: {
                    required: true,
                    minlength: 1,
                    maxlength: 50,
                    accept: '[a-zA-Z]*'
                },
                lastName: {
                    required: true,
                    minlength: 1,
                    maxlength: 50,
                    accept: '[a-zA-Z]*'
                },
                password: {
                    required: true,
                    minlength: 8,
                    maxlength: 50,
                    accept: '(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@@$%^&*-]).{8,}'
                },
                confirmPassword: {
                    required: true,
                    minlength: 8,
                    maxlength: 50,
                    equalTo: "#password"
                },
                timezone: {
                    required: true,
                    minlength: 1,
                    maxlength: 10
                },
                companyId: {
                    required: true,
                    minlength: 1,
                    maxlength: 50
                },
                phoneNumber: {
                    required: true,
                    minlength: 9,
                    maxlength: 16
                },
                phoneExtension: {
                    required: false,
                    minlength: 1,
                    maxlength: 10,
                    accept: '[0-9]*'
                },
                mobileNumber: {
                    minlength: 9,
                    maxlength: 16,
                    required: function () {
                        return $('#mFaEnabled[value="true"]:checked').length > 0;
                    }
                }
            },
            messages: {
                firstName: {
                    required: "Please enter your first name",
                    minlength: "Your first name can not be shorter than 1 character",
                    maxlength: "Your first name can not be longer than 50 characters"
                },
                lastName: {
                    required: "Please enter your last name",
                    minlength: "Your last name can not be shorter than 1 character",
                    maxlength: "Your last name can not be longer than 50 characters"
                },
                timezone: "Please select your timezone",
                companyId: {
                    required: "Please enter your Company Name",
                    maxlength: "Your company name can not be longer than 50 characters"
                },
                phoneNumber: {
                    required: "Please enter a valid phone number"
                },
                mobileNumber: {
                    required: "For Multi-Factor Authentication a mobile number must be included"
                },
                password: {
                    required: "Please provide a password",
                    minlength: "Your password must be at least 8 characters long",
                },
                confirmPassword: {
                    required: "Please confirm your password",
                    minlength: "Your password must be at least 8 characters long",
                    equalTo: "Please enter the same password"
                },
                phoneExtension: {
                    maxlength: "Your extension can not be longer than 10 numbers",
                    accept: "Only numbers allowed"
                },
                userName: {
                    required: "Please enter a valid email address",
                    maxlength: "Your Email Address can not be longer than 50 characters"
                }
            },
            errorElement: "em",
            errorPlacement: function (error, element) {
                // Add the help-block class to the error element
                error.addClass("help-block text-danger font-weight-bold");

                // Add `has-feedback` class to the parent div.form-group
                // in order to add icons to inputs
                element.parents(".errorCheck").addClass("has-feedback");

                if (element.prop("type") === "radio") {
                    error.insertAfter(element.parent("label"));
                } else {
                    error.insertAfter(element);
                }

                // Add the span element, if doesn't exists, and apply the icon classes to it.
                if (!element.next("span")[0]) {
                    $("<span class='fa fa-times form-control-feedback'></span>").insertAfter(element);
                }
            },
            success: function (label, element) {
                // Add the span element, if doesn't exists, and apply the icon classes to it.
                if (!$(element).next("span")[0]) {
                    $("<span class='fa fa-check form-control-feedback'></span>").insertAfter($(element));
                }
            },
            highlight: function (element, errorClass, validClass) {
                $(element).parents(".errorCheck").addClass("has-danger").removeClass("has-success");
                $(element).next("span").addClass("fa-times").removeClass("fa-check");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parents(".errorCheck").addClass("has-success").removeClass("has-danger");
                $(element).next("span").addClass("fa-check").removeClass("fa-times");
            }
        });
        /*** END FORM VALIDATION RULES ***/

        function AuthErrorShow() {
            $("#auth-error")[0].style.display = 'block';
        }

        function AuthErrorHide() {
            $("#auth-error")[0].style.display = 'none';
        }

        function ShowFnfError() {
            $("#fnf-error")[0].style.display = 'block';
        }

        function HideFnfError() {
            $("#fnf-error")[0].style.display = 'none';
        }

        function ShowAccountBlockedMessage() {
            $("#auth0-blocked")[0].style.display = 'block';
        }

        function HideAccountBlockedMessage() {
            $("#auth0-blocked")[0].style.display = 'none';
        }
    </script>
}
